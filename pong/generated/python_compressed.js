Blockly.Python=Blockly.Generator.get("Python");Blockly.Python.ORDER_ATOMIC=0;Blockly.Python.ORDER_COLLECTION=1;Blockly.Python.ORDER_STRING_CONVERSION=1;Blockly.Python.ORDER_MEMBER=2;Blockly.Python.ORDER_FUNCTION_CALL=2;Blockly.Python.ORDER_EXPONENTIATION=3;Blockly.Python.ORDER_UNARY_SIGN=4;Blockly.Python.ORDER_BITWISE_NOT=4;Blockly.Python.ORDER_MULTIPLICATIVE=5;Blockly.Python.ORDER_ADDITIVE=6;Blockly.Python.ORDER_BITWISE_SHIFT=7;Blockly.Python.ORDER_BITWISE_AND=8;
Blockly.Python.ORDER_BITWISE_XOR=9;Blockly.Python.ORDER_BITWISE_OR=10;Blockly.Python.ORDER_RELATIONAL=11;Blockly.Python.ORDER_LOGICAL_NOT=12;Blockly.Python.ORDER_LOGICAL_AND=13;Blockly.Python.ORDER_LOGICAL_OR=14;Blockly.Python.ORDER_CONDITIONAL=15;Blockly.Python.ORDER_LAMBDA=16;Blockly.Python.ORDER_NONE=99;Blockly.Python.INFINITE_LOOP_TRAP=null;Blockly.Python.header=function(){return"#!/usr/bin/env python\n# coding: utf-8\nimport pygame\nfrom pygame.locals import *\nfrom sys import exit\nimport random\nimport os\n\n# Center pong.py window\nos.environ['SDL_VIDEO_CENTERED'] = '1'\n\n# Game ---\npygame.init()\npygame.mouse.set_visible(0)\nclock = pygame.time.Clock()\n\n# Constants ---\nWHITE = (255,255,255)\nGREY = (100, 100, 100)\nBLACK = (  0,  0,  0)\n"};
Blockly.Python.defaultInit=function(a){var b="",c;for(c in a)if(!1==a[c])switch(c){case "pong_windowSize":b+="# Window\nWINDOW_WIDTH = 640\nWINDOW_HEIGHT = 480\n";break;case "pong_title":b+='pong_title_text = u"Pong"\n';break;case "pong_font":b+='font = pygame.font.SysFont("monospace", 40)\n';break;case "pong_ball":b+="# Ball\nball_size = 15\nball_colour = WHITE\nball_image = None\nspeed_x, speed_y = 15., 15.\n";break;case "pong_board":b+="# Board\nbackground_colour = BLACK\nframe_colour = GREY\nbackground_image = None\n";
break;case "pong_paddles":b+="# Paddle1\nbar1_width, bar1_height = 10, 50\nbar1_colour = WHITE\nspeed_bar1 = 20.\n";break;case "pong_paddles2":b+="# Paddle2\nbar2_width, bar2_height = 10, 50\nbar2_colour = WHITE\nspeed_bar2 = 20.\nbar2_keyUp = K_w\nbar2_keyDown = K_s\n"}return b};
Blockly.Python.extraInit=function(){return"# Other variables ---\n# Paddles\nbar1_keyUp = K_UP\nbar1_keyDown = K_DOWN\nbar1_x, bar2_x = WINDOW_WIDTH - (bar2_width * 3), bar1_width * 2 # paddles init x position\nbar1_y, bar2_y = (WINDOW_HEIGHT/2.) - (bar1_height/2.), (WINDOW_HEIGHT/2.) - (bar2_height/2.) # paddles init y position\nbar1_move, bar2_move = 0., 0.\n\n# Ball\nball_x, ball_y = (WINDOW_WIDTH/2. + 5) - (ball_size/2.), (WINDOW_HEIGHT/2.) - (ball_size/2.) # ball init position\n# Score\nscore_1, score_2 = 0, 0 # Init score\nscore1_colour, score2_colour = WHITE, WHITE\nscoreWidth = font.size('0')\nscore2_x , score1_x = (WINDOW_WIDTH/2.) - scoreWidth[0]- 60., (WINDOW_WIDTH/2.) + 60.\nscore1_y, score2_y = 10., 10. # scores y position\n# Board\n# Messages\nwin = 0\ntitle_text = font.size(pong_title_text)\ntitle_text_x, title_text_y = (WINDOW_WIDTH/2.) - (title_text[0]/2.), 30\nintro_str = ['"+Language.player.instructions_enter+
"', ' ', u'"+Language.player.instructions_arrows+"', '"+Language.player.instructions_quit+'\']\ni = 0\ntext_x, text_y = [], []\nfor phrase in intro_str:\n    text = font.size(phrase)\n    text_x.append((WINDOW_WIDTH / 2.) - (text[0] / 2.))\n    text_y.append((WINDOW_HEIGHT / 2.) - (text[1] / 2.) +  i)\n    i += text[1]\nwin_size = font.size("Player 1 wins!")\nwin_x, win_y =  (WINDOW_WIDTH/2.) - (win_size[0]/2.),  (WINDOW_HEIGHT/2.) - (win_size[1]/2.)\n# Add-ons\nhits = 0\n\n# Game state (0: init, 1: play)\nstate = 0\n\n# Store initial values for reset\nbar1_init_x, bar2_init_x = bar1_x, bar2_x\nbar1_init_y, bar2_init_y = bar1_y, bar2_y\ninit_speed_bar1, init_speed_bar2 = speed_bar1, speed_bar2\nball_initx, ball_inity = ball_x, ball_y\nball_init_speed_x, ball_init_speed_y = speed_x, speed_y\n\n# Set the systembar entry\npygame.display.set_caption("Pong")\nicon = pygame.image.load("/usr/share/kano-desktop/icons/pong.png")\npygame.display.set_icon(icon)\n\n# Set video mode\nscreen=pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT), DOUBLEBUF, 16) #24bit colour depth\nscreen.set_alpha(None)\n\n# Create background\nback = pygame.Surface((WINDOW_WIDTH,WINDOW_HEIGHT))\nbackground = back.convert()\nbackground.fill(background_colour)\nif background_image != None:\n    image_loaded = pygame.image.load(background_image)\n    image_loaded = pygame.transform.scale(image_loaded, (WINDOW_WIDTH, WINDOW_HEIGHT))\n    background.blit(image_loaded, [0,0])\n# Create paddles\nbar1_surface = pygame.Surface((bar1_width, bar1_height))\nbar1 = bar1_surface.convert()\nbar1.fill(bar1_colour)\nbar2_surface = pygame.Surface((bar2_width, bar2_height))\nbar2 = bar2_surface.convert()\nbar2.fill(bar2_colour)\n\n\n# Create ball\nball_surface = pygame.Surface((ball_size, ball_size))\nkey_colour = (0, 0, 1)\nball_surface.fill(key_colour)\nball_surface.set_colorkey(key_colour)\n\nif ball_image == None:\n    ball = pygame.draw.circle(ball_surface, ball_colour, (ball_size/2, ball_size/2), ball_size/2)\nelse:\n    ball_image_surface = pygame.image.load(ball_image)\n    ball_image_surface = pygame.transform.scale(ball_image_surface, (ball_size, ball_size))\n    ball_surface.blit(ball_image_surface, [0,0])\nball = ball_surface.convert_alpha()\n\nkeyPressed = []\n#\ntitle_font = font.render(pong_title_text, True, WHITE)\nintro_font = []\nfor s in intro_str:\n    intro_font.append(font.render(s, True, WHITE))\n'};
Blockly.Python.keyPressedInit=function(a){for(var b="",c=0;c<a;c++)b+="keyPressed.append(False)\n";return b};Blockly.Python.loopFirst=function(){return"while True:\n    # Update\n    time_passed = clock.tick(30000)\n    time_sec = time_passed / 100.0\n\n    # Playing\n    if state == 1:\n        ball_x += speed_x * time_sec\n        ball_y += speed_y * time_sec\n        inc_bar1 = speed_bar1 * time_sec\n        inc_bar2 = speed_bar2 * time_sec\n"};
Blockly.Python.readInput=function(a,b,c){a="        # Read input\n        for event in pygame.event.get():\n            if event.type == QUIT:\n                exit()\n            if event.type == KEYDOWN:\n                if event.key == K_q:\n                    exit()\n                # Player1\n                if event.key == bar1_keyUp:\n                    bar1_move = -inc_bar1\n                elif event.key == bar1_keyDown:\n                    bar1_move = inc_bar1\n";if(b){a+="                # If this key is pressed during play\n";
for(var d=0;d<c.length;d++)a+=Blockly.Generator.prefixLines(c[d],"                "),a+="                  keyPressed["+d+"] = True\n"}a+="            elif event.type == KEYUP:\n                # Player1\n                if event.key == bar1_keyUp:\n                    bar1_move = 0.\n                elif event.key == bar1_keyDown:\n                    bar1_move = 0.\n                elif event.key == K_ESCAPE:\n                    exit()\n\n";if(b)for(a+="                # If this key is released during play\n",
d=0;d<c.length;d++){var e=c[d].substring(0,c[d].indexOf(":")+1);a+=Blockly.Generator.prefixLines(e,"                ");a+="\n";a+="                  keyPressed["+d+"] = False\n"}a+="        bar1_y += bar1_move\n";if(b)for(a+="        # While key is pressed\n",d=0;d<c.length;d++)a+="        if keyPressed["+d+"]:\n",e=Blockly.Generator.pickLine(c[d],2),a+=Blockly.Generator.prefixLines(e,"        ");return a};Blockly.Python.clampCode=function(){return"        # Clamp paddle y values\n        max_y1 = WINDOW_HEIGHT - bar1_height\n        max_y2 = WINDOW_HEIGHT - bar2_height\n        if bar1_y >= max_y1: bar1_y = max_y1\n        elif bar1_y <= 0 : bar1_y = 0\n        if bar2_y >= max_y2: bar2_y = max_y2\n        elif bar2_y <= 0: bar2_y = 0\n"};
Blockly.Python.collisionPaddle1Init=function(){return"        # Paddle1\n        if ball_x >= bar1_x - ball_size:\n            if ball_y >= bar1_y - (ball_size/2) and ball_y <= bar1_y + (bar1_height - (ball_size/2)):\n"};Blockly.Python.collisionPaddle1CustomCode=function(a){var b="                # Custom collision code";a=a.substring(a.indexOf(":")+1);b+=Blockly.Generator.prefixLines(a,"              ");return b+"                \n"};
Blockly.Python.collisionPaddle1Finish=function(){var a;return a="                ball_x = bar1_x - ball_size\n                speed_x = -speed_x\n                hits += 1\n"};Blockly.Python.collisionPaddle2Init=function(a,b){return"        # Paddle2\n        elif ball_x <= bar2_x + bar2_width:\n            if ball_y >= bar2_y - (ball_size/2) and ball_y <= bar2_y + (bar2_height - (ball_size/2)):\n"};
Blockly.Python.collisionPaddle2CustomCode=function(a){var b="                # Custom collision code";a=a.substring(a.indexOf(":")+1);b+=Blockly.Generator.prefixLines(a,"              ");return b+"                \n"};Blockly.Python.collisionPaddle2Finish=function(){var a;return a="                ball_x = bar2_x + bar2_width\n                speed_x = -speed_x\n                hits += 1\n"};Blockly.Python.collisionWall=function(){return"        if ball_y <= 0:\n            speed_y = -speed_y\n            ball_y = 0\n        elif ball_y >= WINDOW_HEIGHT - ball_size:\n            speed_y = -speed_y\n            ball_y = WINDOW_HEIGHT - ball_size"};
Blockly.Python.goalPlayer1=function(){return"        if ball_x < 0:\n            score_1 += 1\n            ball_x, ball_y = WINDOW_WIDTH/2, (WINDOW_HEIGHT/2 - ball_size/2)\n            bar1_y,bar2_y = (WINDOW_HEIGHT/2.) - (bar1_height/2.), (WINDOW_HEIGHT/2.) - (bar2_height/2.)\n            hits = 0\n"};Blockly.Python.goalPlayer1CustomCode=function(a){var b="            #Custom goal code";a=a.substring(a.indexOf(":")+1);b+=Blockly.Generator.prefixLines(a,"          ");return b+"\n"};
Blockly.Python.goalPlayer2=function(){return"        elif ball_x > WINDOW_WIDTH - bar1_width:\n            score_2 += 1\n            ball_x, ball_y = WINDOW_WIDTH/2, (WINDOW_HEIGHT/2 - ball_size/2)\n            bar1_y, bar2_y = (WINDOW_HEIGHT/2.) - (bar1_height/2.), (WINDOW_HEIGHT/2.) - (bar2_height/2.)\n            hits = 0\n"};
Blockly.Python.goalPlayer2CustomCode=function(a){var b="            # Custom goal code";a=a.substring(a.indexOf(":")+1);b+=Blockly.Generator.prefixLines(a,"          ");return b+"\n"};Blockly.Python.paddleBot=function(a){if(a)return a="        # AI\n        if ball_x <= WINDOW_WIDTH/2:\n            if (bar2_y + bar2_height/2) < ball_y:\n",a+="                bar2_y += inc_bar2\n",a+="            elif (bar2_y - bar2_height/2) > ball_y:\n",a+="                bar2_y -= inc_bar2\n"};
Blockly.Python.renderObjects=function(){return'    # Render of objects\n    screen.blit(background,(0,0))\n    middle_line = pygame.draw.line(screen, frame_colour, ((WINDOW_WIDTH/2), 0), ((WINDOW_WIDTH/2), WINDOW_HEIGHT))\n    line1 = pygame.draw.line(screen, frame_colour, ((bar2_x/2.), 0), ((bar2_x/2.), WINDOW_HEIGHT))\n    line2 = pygame.draw.line(screen, frame_colour, ((WINDOW_WIDTH - bar2_x/2.), 0), ((WINDOW_WIDTH - bar2_x/2), WINDOW_HEIGHT))\n    screen.blit(bar1, (bar1_x,bar1_y))\n    screen.blit(bar2, (bar2_x,bar2_y))\n    if state == 1:\n        screen.blit(ball, (ball_x, ball_y))\n        score1_font = font.render(str(score_1), True, score1_colour)\n        score2_font = font.render(str(score_2), True, score2_colour)\n        score2_size = font.size(str(score_2))\n        score2_x, score1_x = (WINDOW_WIDTH/2.) - score2_size[0] - 60., (WINDOW_WIDTH/2.) + 60.\n        screen.blit(score1_font, (score1_x, score1_y))\n        screen.blit(score2_font, (score2_x, score2_y))\n    elif state == 0:\n        # Check for winning condition\n        if win == 0:\n            screen.blit(title_font, (title_text_x, title_text_y))\n            for i in range(len(intro_font)):\n                screen.blit(intro_font[i], (text_x[i], text_y[i]))\n        else:\n            colour = bar1_colour\n            text = "Player 1 wins!"\n            if win == 2:\n                colour = bar2_colour\n                text = "Player 2 wins!"\n            win_font = font.render(text, True, colour)\n            screen.blit(win_font, (win_x, win_y))\n    # Exit game when the game window loses focus but not for the first few seconds.\n    if not pygame.key.get_focused() and pygame.time.get_ticks() > 5000:\n        exit()\n\n    pygame.display.update()\n'};
Blockly.Python.win=function(){return"        if win != 0:\n            state = 0\n"};Blockly.Python.startGame=function(){return"    # Start\n    elif state == 0:\n        # Read input\n        for event in pygame.event.get():\n            if event.type == QUIT:\n                exit()\n            if event.type == KEYUP:\n                if event.key == K_RETURN:\n                    state = 1\n                    # Reset the game.\n                    # Ball\n                    ball_x, ball_y = ball_initx, ball_inity\n                    speed_x, speed_y = ball_init_speed_x, ball_init_speed_y\n                    # Score\n                    score_1, score_2 = 0, 0\n                    # Paddle\n                    bar1_x, bar2_x = bar1_init_x, bar2_init_x\n                    bar1_y, bar2_y = bar1_init_y, bar2_init_y\n                    speed_bar1, speed_bar2 = init_speed_bar1, init_speed_bar2\n                    bar1_move = 0.\n"};
Blockly.Python.keyPressedInitReset=function(a){for(var b="",c=0;c<a;c++)b+="                    keyPressed.append(False)\n";return b};Blockly.Python.keyPressedWinReset=function(a){for(var b="",c=0;c<a;c++)b+="                    keyPressed["+c+"] = False\n";return b};Blockly.Python.startGameContinued=function(){return"                    # Hits\n                    hits = 0\n                    # Win\n                    win = 0\n                elif event.key == K_ESCAPE or event.key == K_q:\n                     exit()\n"};
Blockly.Python.finish=function(a){var b=[],c=[],d;for(d in Blockly.Python.definitions_){var e=Blockly.Python.definitions_[d];e.match(/^(from\s+\S+\s+)?import\s+\S+/)?b.push(e):c.push(e)}return(b.join("\n")+"\n\n"+c.join("\n\n")).replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n\n")+a};Blockly.Python.scrubNakedValue=function(a){return a+"\n"};Blockly.Python.quote_=function(a){a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/\%/g,"\\%").replace(/'/g,"\\'");return"'"+a+"'"};
Blockly.Python.scrub_=function(a,b){if(null===b)return"";var c="";if(!a.outputConnection||!a.outputConnection.targetConnection){var d=a.getCommentText();d&&(c+=Blockly.Generator.prefixLines(d,"# ")+"\n");for(var e=0;e<a.inputList.length;e++)a.inputList[e].type==Blockly.INPUT_VALUE&&(d=a.inputList[e].connection.targetBlock())&&(d=Blockly.Generator.allNestedComments(d))&&(c+=Blockly.Generator.prefixLines(d,"# "))}e=a.nextConnection&&a.nextConnection.targetBlock();e=this.blockToCode(e);return c+b+e};Blockly.Python.colour={};Blockly.Python.colour_picker=function(){var a="'"+this.getTitleValue("COLOUR")+"'";return[hexToRgb(a),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.colour_random=function(){return["(random.randint(0, 2**8 - 1), random.randint(0, 2**8 - 1), random.randint(0, 2**8 - 1))",Blockly.Python.ORDER_ATOMIC]};function hexToRgb(a){var b=parseInt(a.substring(2,4),16),c=parseInt(a.substring(4,6),16);a=parseInt(a.substring(6,8),16);return"("+b+", "+c+", "+a+")"};Blockly.Python.logic={};Blockly.Python.controls_if=function(){var a=Blockly.Python.valueToCode(this,"IF0",Blockly.Python.ORDER_NONE)||"False",b=Blockly.Python.statementToCode(this,"DO0")||"  pass\n";return"if "+a+":\n"+b};Blockly.Python.logic_compare=function(){var a=this.getTitleValue("OP"),a=Blockly.Python.logic_compare.OPERATORS[a],b=Blockly.Python.ORDER_RELATIONAL,c=Blockly.Python.valueToCode(this,"A",b)||"0",d=Blockly.Python.valueToCode(this,"B",b)||"0";return[c+" "+a+" "+d,b]};
Blockly.Python.logic_compare.OPERATORS={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="};Blockly.Python.logic_operation=function(){var a="AND"==this.getTitleValue("OP")?"and":"or",b="and"==a?Blockly.Python.ORDER_LOGICAL_AND:Blockly.Python.ORDER_LOGICAL_OR,c=Blockly.Python.valueToCode(this,"A",b)||"False",d=Blockly.Python.valueToCode(this,"B",b)||"False";return[c+" "+a+" "+d,b]};
Blockly.Python.logic_negate=function(){return["not "+(Blockly.Python.valueToCode(this,"BOOL",Blockly.Python.ORDER_LOGICAL_NOT)||"False"),Blockly.Python.ORDER_LOGICAL_NOT]};Blockly.Python.logic_boolean=function(){return["TRUE"==this.getTitleValue("BOOL")?"True":"False",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.pong={};Blockly.Python.maxWindowSize=6E3;Blockly.Python.maxFontSize=2300;Blockly.Python.maxPaddleSize=65E3;Blockly.Python.maxBallSize=7500;Blockly.Python.maxPosition=2E9;Blockly.Python.realpath_code_from_relpath=function(a){return"os.path.realpath("+('os.path.join("/usr/share/make-pong/pong/","'+a+'")')+")"};
Blockly.Python.pong_windowSize=function(){var a="# Window\n",b=window.parseFloat(this.getTitleValue("HEIGHT"));b>Blockly.Python.maxWindowSize&&(b=Blockly.Python.maxWindowSize);a+="WINDOW_HEIGHT = "+b+"\n";b=window.parseFloat(this.getTitleValue("WIDTH"));b>Blockly.Python.maxWindowSize&&(b=Blockly.Python.maxWindowSize);return a+("WINDOW_WIDTH = "+b)};Blockly.Python.pong_title=function(){var a=this.getTitleValue("Title"),a=a.replace(/\"/g,'\\"');return'pong_title_text = u"'+a+'"\n'};
Blockly.Python.pong_ai=function(){return this.getTitleValue("VALUE")};Blockly.Python.pong_font=function(){var a=this.getTitleValue("TYPE"),b=window.parseFloat(this.getTitleValue("SIZE"));b>Blockly.Python.maxFontSize&&(b=Blockly.Python.maxFontSize);return"Bariol"!=a?'font = pygame.font.SysFont("'+a+'", '+b+")":'font = pygame.font.Font("/usr/share/fonts/kanux/Bariol_Regular.otf", '+b+")"};
Blockly.Python.pong_paddles=function(){var a="",b=this.getTitleValue("PLAYER"),c=window.parseFloat(this.getTitleValue("HEIGHT")),c=c+"";-1==c.indexOf("random")&&(c=c.replace(".",""));c>Blockly.Python.maxPaddleSize&&(c=Blockly.Python.maxPaddleSize);var d=Blockly.Python.valueToCode(this,"COLOUR",Blockly.Python.ORDER_NONE)||"(255, 255, 255)",e=window.parseFloat(this.getTitleValue("SPEED"));"PLAYER1"==b?(a=a+"# Paddle1\n"+("bar1_width, bar1_height = 10, "+c+"\n"),a+="bar1_colour = "+d+"\n",a+="speed_bar1 = "+
e):(a+="# Paddle2\n",a+="bar2_width, bar2_height = 10, "+c+"\n",a+="bar2_colour = "+d+"\n",a+="speed_bar2 = "+e);return a};
Blockly.Python.pong_ball=function(){var a="# Ball\n",b=0,b=this.getTitleValue("Radius");""===b?b="15":(b=window.parseFloat(b),b+="",-1==b.indexOf("random")&&(b=b.replace(".","")));b>Blockly.Python.maxBallSize&&(b=Blockly.Python.maxBallSize);var a=a+("ball_size = "+b+"\n"),b=this.getTitleValue("Surface"),c="(255, 255, 255)",d="None";"Colour"===b?c=Blockly.Python.valueToCode(this,"COLOUR",Blockly.Python.ORDER_NONE)||c:d=Blockly.Python.realpath_code_from_relpath(b);a=a+("ball_image = "+d+"\n")+("ball_colour = "+
c+"\n");b=0;b=this.getTitleValue("Speed");b=""===b?"15":window.parseFloat(b);return a+="speed_x, speed_y = "+b+", "+b+"\n"};
Blockly.Python.pong_board=function(){var a="# Board\n",b=Blockly.Python.valueToCode(this,"FRAMECOLOUR",Blockly.Python.ORDER_NONE)||"GREY",c=this.getTitleValue("Scene"),d="(0, 0, 0)",e="None";"Colour"===c?d=Blockly.Python.valueToCode(this,"BG_COLOUR",Blockly.Python.ORDER_NONE)||d:e=Blockly.Python.realpath_code_from_relpath(c);a=a+("background_colour = "+d+"\n")+("background_image = "+e+"\n");return a+="frame_colour = "+b+"\n"};
Blockly.Python.pong_playerPosition=function(){return["PLAYER1"==this.getTitleValue("PLAYER")?"bar1_y":"bar2_y",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.pong_ballPosition=function(){return["X"==this.getTitleValue("COORD")?"ball_x":"ball_y",Blockly.Python.ORDER_UNARY_SIGN]};Blockly.Python.pong_speedGetter=function(){var a=this.getTitleValue("ITEM");return["PLAYER1"==a?"speed_bar1":"PLAYER2"==a?"speed_bar2":"abs(speed_x)",Blockly.Python.ORDER_UNARY_SIGN]};
Blockly.Python.pong_ballSizeGetter=function(){return["ball_size",Blockly.Python.ORDER_UNARY_SIGN]};Blockly.Python.pong_paddleSizeGetter=function(){return["PLAYER1"==this.getTitleValue("PLAYER")?"bar1_height":"bar2_height",Blockly.Python.ORDER_UNARY_SIGN]};Blockly.Python.pong_scoreGetter=function(){return["PLAYER1"==this.getTitleValue("PLAYER")?"score_1":"score_2",Blockly.Python.ORDER_UNARY_SIGN]};Blockly.Python.pong_collisionsGetter=function(){return["hits",Blockly.Python.ORDER_UNARY_SIGN]};
Blockly.Python.pong_arenaGetter=function(){return["X"==this.getTitleValue("COORD")?"WINDOW_WIDTH/2":"WINDOW_HEIGHT/2",Blockly.Python.ORDER_UNARY_SIGN]};
Blockly.Python.pong_speedSetter=function(){var a=this.getTitleValue("ITEM"),b=Blockly.Python.valueToCode(this,"NUM",Blockly.Python.ORDER_NONE)||20;if("PLAYER1"==a)b="speed_bar1 = "+b+"\n";else if("PLAYER2"==a)b="speed_bar2 = "+b+"\n";else if("BOTH"==a)b="speed_bar1 = "+b+"\nspeed_bar2 = "+b+"\n";else{var a="if speed_x * ("+b+") > 0:\n"+("    speed_x = ("+b+") \n"),a=a+"else: \n",a=a+("    speed_x = -("+b+") \n"),c;c="if speed_y * ("+b+") > 0:\n"+("    speed_y = ("+b+") \n");c+="else: \n";c+="    speed_y = -("+
b+") \n";b=a+c}return b};Blockly.Python.pong_ballPositionSetter=function(){var a=this.getTitleValue("COORD"),b=Blockly.Python.valueToCode(this,"NUM",Blockly.Python.ORDER_NONE)||200,b=b+"";-1==b.indexOf("random")&&(b=b.replace(".",""));b>Blockly.Python.maxPosition&&(b=Blockly.Python.maxPosition);return"X"==a?"ball_x = "+b+"\n":"ball_y = "+b+"\n"};
Blockly.Python.pong_paddlePositionSetter=function(){var a=this.getTitleValue("PLAYER"),b=Blockly.Python.valueToCode(this,"NUM",Blockly.Python.ORDER_NONE)||0,b=b+"";-1==b.indexOf("random")&&(b=b.replace(".",""));b>Blockly.Python.maxPosition&&(b=Blockly.Python.maxPosition);return a="PLAYER1"==a?"bar1_y = "+b+"\n":"PLAYER2"==a?"bar2_y = "+b+"\n":"bar1_y = "+b+"\n"+("bar2_y = "+b+"\n")};
Blockly.Python.pong_paddleSizeSetter=function(){var a=this.getTitleValue("PLAYER"),b=Blockly.Python.valueToCode(this,"HEIGHT",Blockly.Python.ORDER_NONE)||50,b=b+"";-1==b.indexOf("random")&&(b=b.replace(".",""));b>Blockly.Python.maxPaddleSize&&(pos=Blockly.Python.maxPaddleSize);"PLAYER1"==a?(a="bar1_height = abs("+b+")\nbar1_surface = pygame.Surface((bar1_width, bar1_height)) \n",a+="bar1 = bar1_surface.convert()\n",a+="bar1.fill(bar1_colour)\n"):("PLAYER2"==a?a="bar2_height = abs("+b+")\n":(a="bar1_height = abs("+
b+")\nbar1_surface = pygame.Surface((bar1_width, bar1_height)) \n",a+="bar1 = bar1_surface.convert()\n",a+="bar1.fill(bar1_colour)\n",a+="bar2_height = abs("+b+")\n"),a+="bar2_surface = pygame.Surface((bar2_width, bar2_height)) \n",a+="bar2 = bar2_surface.convert()\n",a+="bar2.fill(bar2_colour)\n");return a};
Blockly.Python.pong_ballSizeSetter=function(){var a=Blockly.Python.valueToCode(this,"NUM",Blockly.Python.ORDER_NONE)||15,a=a+"";-1==a.indexOf("random")&&(a=a.replace(".",""));a>Blockly.Python.maxBallSize&&(a=Blockly.Python.maxBallSize);a="ball_size = abs(int("+a+"))\nball_surface = pygame.Surface((ball_size, ball_size))\n";a+="ball_surface.fill(background_colour)\n";a+="ball = pygame.draw.circle(ball_surface, ball_colour, (ball_size/2, ball_size/2), ball_size/2)\n";a+="ball = ball_surface.convert()\n";
return a+="ball.set_colorkey(background_colour)\n"};
Blockly.Python.pong_colourSetter=function(){var a=this.getTitleValue("ITEM"),b=Blockly.Python.valueToCode(this,"COLOUR",Blockly.Python.ORDER_NONE)||"(255, 255, 255)",c;"PLAYER1"==a?c="bar1_colour = "+b+"\nbar1.fill(bar1_colour)\n":"PLAYER2"==a?c="bar2_colour = "+b+"\nbar2.fill(bar2_colour)\n":"BALL"==a&&(c="ball_colour = "+b+"\nball = pygame.draw.circle(ball_surface, ball_colour, (ball_size/2, ball_size/2), ball_size/2)\n",c+="ball = ball_surface.convert()\n",c+="ball.set_colorkey(background_colour)\n");
return c};Blockly.Python.pong_scoreSetter=function(){var a=this.getTitleValue("PLAYER"),b=Blockly.Python.valueToCode(this,"NUM",Blockly.Python.ORDER_NONE)||0,b=b+"";-1==b.indexOf("random")&&(b=b.replace(".",""));return a="PLAYER1"==a?"score_1 = "+b+"\n":"PLAYER2"==a?"score_2 = "+b+"\n":"score_1 = "+b+"\n"+("score_2 = "+b+"\n")};Blockly.Python.pong_collision=function(){return["collision",Blockly.Python.ORDER_UNARY_SIGN]};
Blockly.Python.pong_goal=function(){var a=this.getTitleValue("PLAYER"),b="goal";return["PLAYER1"==a?b+"player1":"PLAYER2"==a?b+"player2":b+"both",Blockly.Python.ORDER_UNARY_SIGN]};Blockly.Python.pong_keyPressed=function(){var a=this.getTitleValue("CHAR");return["event.key == "+getKeyCode(a),Blockly.Python.ORDER_UNARY_SIGN]};Blockly.Python.pong_actionSound=function(){var a=this.getTitleValue("SOUND");return"sound_path = "+Blockly.Python.realpath_code_from_relpath(a)+'\nos.system("aplay -q {} &".format(sound_path))\n'};
Blockly.Python.pong_rebound=function(){return"speed_x = -speed_x \nhits += 1 \n"};Blockly.Python.pong_movePaddleOne=function(){return"bar1_y"+("UP"==this.getTitleValue("DIRECTION")?" -= ":" += ")+"inc_bar1\n"};Blockly.Python.pong_movePaddleTwo=function(){return"bar2_y"+("UP"==this.getTitleValue("DIRECTION")?" -= ":" += ")+"inc_bar2\n"};Blockly.Python.pong_movePaddleBoth=function(){var a="UP"==this.getTitleValue("DIRECTION")?" -= ":" += ";return a="bar1_y"+a+"inc_bar1\n"+("bar2_y"+a+"inc_bar2\n")};
Blockly.Python.pong_win=function(){return"PLAYER1"==this.getTitleValue("PLAYER")?"win = 1\n":"win = 2\n"};function hexToRgb(a){var b=parseInt(a.substring(2,4),16),c=parseInt(a.substring(4,6),16);a=parseInt(a.substring(6,8),16);return"("+b+", "+c+", "+a+")"}Blockly.Python.pong_paddleMiddleGetter=function(){return["PLAYER1"==this.getTitleValue("PLAYER")?"bar1_y + bar1_height/2":"bar2_y + bar2_height/2",Blockly.Python.ORDER_UNARY_SIGN]};
Blockly.Python.pong_paddleTopGetter=function(){return["PLAYER1"==this.getTitleValue("PLAYER")?"bar1_y":"bar2_y",Blockly.Python.ORDER_UNARY_SIGN]};Blockly.Python.pong_paddleBottomGetter=function(){return["PLAYER1"==this.getTitleValue("PLAYER")?"bar1_y + bar1_height":"bar2_y + bar2_height",Blockly.Python.ORDER_UNARY_SIGN]};Blockly.Python.pong_play_soundtrack=function(){return'soundtrack_path = os.path.abspath(os.path.join("/usr/share/kano-media/sounds/blocks", "'+this.getTitleValue("BG_SOUND")+'"))\nos.system("aplay -q {} &".format(soundtrack_path))\n'};
function getKeyCode(a){var b;switch(a){case "UP":b="K_UP";break;case "DOWN":b="K_DOWN";break;case "LEFT":b="K_LEFT";break;case "RIGHT":b="K_RIGHT";break;case "A":b="K_a";break;case "D":b="K_d";break;case "S":b="K_s";break;case "W":b="K_w"}return b};Blockly.Python.math={};Blockly.Python.math_number=function(){var a=this.getTitleValue("NUM"),a=-1!==a.indexOf(".")?window.parseFloat(a):window.parseFloat(a)+".";return[a,0>a?Blockly.Python.ORDER_UNARY_SIGN:Blockly.Python.ORDER_ATOMIC]};Blockly.Python.math_arithmetic=function(){var a=this.getTitleValue("OP"),b=Blockly.Python.math_arithmetic.OPERATORS[a],a=b[0],b=b[1],c=Blockly.Python.valueToCode(this,"A",b)||"0",d=Blockly.Python.valueToCode(this,"B",b)||"0";return[c+a+d,b]};
Blockly.Python.math_arithmetic.OPERATORS={ADD:[" + ",Blockly.Python.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Python.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Python.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Python.ORDER_MULTIPLICATIVE],POWER:[" ** ",Blockly.Python.ORDER_EXPONENTIATION]};Blockly.Python.math_random_int=function(){var a=Blockly.Python.ORDER_NONE;return["random.randint(1, "+this.getTitleValue("NUM")+")",a]};
